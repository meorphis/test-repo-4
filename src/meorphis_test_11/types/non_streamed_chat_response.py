# File generated from our OpenAPI spec by Stainless.

from typing import List, Optional
from typing_extensions import Literal

from .._models import BaseModel

__all__ = [
    "NonStreamedChatResponse",
    "Citation",
    "Document",
    "SearchQuery",
    "SearchResult",
    "SearchResultConnector",
    "SearchResultSearchQuery",
]


class Citation(BaseModel):
    document_ids: List[str]
    """Identifiers of documents cited by this section of the generated reply."""

    end: int
    """The index of text that the citation ends after, counting from zero.

    For example, a generation of `Hello, world!` with a citation on `world` would
    have an end value of `11`. This is because the citation ends after `d`, which is
    the eleventh character.
    """

    start: int
    """The index of text that the citation starts at, counting from zero.

    For example, a generation of `Hello, world!` with a citation on `world` would
    have a start value of `7`. This is because the citation starts at `w`, which is
    the seventh character.
    """

    text: str
    """The text of the citation.

    For example, a generation of `Hello, world!` with a citation of `world` would
    have a text value of `world`.
    """


class Document(BaseModel):
    snippet: str
    """The contents of the document."""

    title: str
    """Title describing the contents of the document."""

    id: Optional[str] = None
    """Unique identifier for this document."""

    url: Optional[str] = None
    """The URL from which this document originates."""


class SearchQuery(BaseModel):
    generation_id: str
    """Unique identifier for the generated search query.

    Useful for submitting feedback.
    """

    text: str
    """The text of the search query."""


class SearchResultConnector(BaseModel):
    id: str
    """The identifier of the connector. Currently only 'web-search' is supported."""


class SearchResultSearchQuery(BaseModel):
    text: str

    user_name: Literal["Chatbot", "User"]


class SearchResult(BaseModel):
    connector: SearchResultConnector
    """The connector from which this result comes from."""

    document_ids: List[str]
    """Identifiers of documents found by this search query."""

    search_query: SearchResultSearchQuery
    """A single message in a chat history.

    Contains the username of the sender and the text contents of the message.
    """


class NonStreamedChatResponse(BaseModel):
    generation_id: str
    """Unique identifier for the generated reply. Useful for submitting feedback."""

    text: str
    """Contents of the reply generated by the model."""

    citations: Optional[List[Citation]] = None
    """Inline citations for the generated reply."""

    documents: Optional[List[Document]] = None
    """Documents seen by the model when generating the reply."""

    search_queries: Optional[List[SearchQuery]] = None
    """Generated search queries, meant to be used as part of the RAG flow."""

    search_results: Optional[List[SearchResult]] = None
    """Documents retrieved from each of the conducted searches."""
